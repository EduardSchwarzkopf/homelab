image:
  repository: ghcr.io/paperless-ngx/paperless-ngx
  pullPolicy: IfNotPresent
  tag: 2.18.3

env:
  TZ: "Europe/Berlin"
  PAPERLESS_URL: "https://paperless.lan.schwarzkopf.center"
  PAPERLESS_ALLOWED_HOSTS: "paperless.lan.schwarzkopf.center"
  PAPERLESS_CSRF_TRUSTED_ORIGINS: "https://*.lan.schwarzkopf.center,https://paperless.lan.schwarzkopf.center"
  PAPERLESS_CORS_ALLOWED_HOSTS: "https://paperless.lan.schwarzkopf.center"
  PAPERLESS_TRUSTED_PROXIES: "*"

  PAPERLESS_DBENGINE: "postgresql"
  PAPERLESS_DBHOST: "database-pg-prod"
  PAPERLESS_DBPORT: "5432"
  PAPERLESS_DBNAME: "paperless"
  PAPERLESS_DBUSER: "paperless"
  PAPERLESS_DBSSLMODE: "disable"

persistence:
  media:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 20Gi
    retain: true
    mountPath: /usr/src/paperless/media
  export:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 5Gi
    mountPath: /usr/src/paperless/export
    retain: true
  consume:
    enabled: true
    retain: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 4Gi
    mountPath: /usr/src/paperless/consume

serviceAccount:
  create: false
  name: paperless-ngx-sa

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "role-paperless-ngx"
  vault.hashicorp.com/agent-inject-secret-paperless: "kv-apps/data/paperless"
  vault.hashicorp.com/agent-inject-template-paperless: |
    {{- with secret "kv-apps/data/paperless" -}}
    PAPERLESS_SECRET_KEY={{ .Data.data.username }}
    PAPERLESS_DBPASS={{ .Data.data.password }}
    {{- end }}
  vault.hashicorp.com/agent-inject-vault-address: "https://vault.lan.schwarzkopf.center"

extraArgs:
  - /bin/sh
  - -c
  - |
    if [ -f /vault/secrets/paperless ]; then
      export $(sed -e 's/\r$//' /vault/secrets/paperless | xargs)
    fi
    exec /entrypoint.sh
