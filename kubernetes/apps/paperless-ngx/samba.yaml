apiVersion: v1
kind: ConfigMap
metadata:
  name: samba-config-template
  namespace: paperless-ngx
data:
  config.yml.tmpl: |
    auth:
      - user: paperless
        group: sambagroup
        uid: 1000
        gid: 1000
        password: ${SAMBA_PASSWORD}
    global:
      - "server string = Samba Server"
      - "log level = 1"
    share:
      - name: data
        path: /samba/data
        browsable: yes
        readonly: no
        guestok: no
        validusers: paperless
        writelist: paperless
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-samba
  namespace: paperless-ngx
  labels:
    app: paperless-ngx-samba
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-samba
  template:
    metadata:
      labels:
        app: paperless-ngx-samba
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "role-paperless-ngx"
        vault.hashicorp.com/agent-inject-secret-paperless: "kv-apps/data/paperless-ngx"
        vault.hashicorp.com/agent-inject-template-samba: |
          {{- with secret "kv-apps/data/paperless-ngx" -}}
          export SAMBA_PASSWORD="{{ .Data.data.SAMBA_PASSWORD }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-vault-address: "https://vault.lan.schwarzkopf.center"
        vault.hashicorp.com/agent-pre-populate: "true"
    spec:
      serviceAccountName: paperless-ngx-sa
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: render-config
          image: alpine:3.18
          command:
            - /bin/sh
            - -c
            - |
              # install envsubst then render config
              apk add --no-cache gettext >/dev/null 2>&1 || true
              # wait for Vault injector to populate the file (guard)
              n=0
              until [ -f /vault/secrets/samba ] || [ $n -ge 20 ]; do sleep 0.5; n=$((n+1)); done
              if [ -f /vault/secrets/samba ]; then
                . /vault/secrets/samba
              fi
              if [ -f /templates/config.yml.tmpl ]; then
                envsubst < /templates/config.yml.tmpl > /data/config.yml
              else
                echo "missing template" >&2
                exit 1
              fi
          volumeMounts:
            - name: data
              mountPath: /data
            - name: template
              mountPath: /templates
            - name: vault-secret
              mountPath: /vault/secrets
      containers:
        - name: samba
          image: crazymax/samba:latest
          env:
            - name: TZ
              value: "UTC"
            - name: SAMBA_LOG_LEVEL
              value: "1"
            - name: CONFIG_FILE
              value: "/data/config.yml"
          ports:
            - containerPort: 445
              protocol: TCP
            - containerPort: 3702
              protocol: UDP
            - containerPort: 5355
              protocol: UDP
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /data
            - name: samba-shares
              mountPath: /samba/data
      volumes:
        - name: data
          emptyDir: {}
        - name: template
          configMap:
            name: samba-config-template
            items:
              - key: config.yml.tmpl
                path: config.yml.tmpl
        - name: vault-secret
          emptyDir: {}
        - name: samba-shares
          persistentVolumeClaim:
            claimName: paperless-ngx-consume
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-samba
  namespace: paperless-ngx
spec:
  type: LoadBalancer
  ports:
    - name: smb-445
      port: 445
      targetPort: 445
      protocol: TCP
    - name: smb-139
      port: 139
      targetPort: 139
      protocol: TCP
  selector:
    app.kubernetes.io/name: paperless-ngx-samba
